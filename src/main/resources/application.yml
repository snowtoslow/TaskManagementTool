server:
  port: 8080
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/taskTool?useSSL=false
    username: forAll
    password: qwerty123

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 1044536693160-i3r12jmv6j21v4df7q0g8sppe2ngmhqc.apps.googleusercontent.com
            clientSecret: XCUVrAhXc0GXVvSTLNeJrJos
            redirectUriTemplate: "http://localhost:8080/oauth2/callback/google"
            clientAuthenticationMethod: get
            scope:
              - email
              - profile
              - openid
          github:
            clientId: a37b0f586c474a740f2b
            clientSecret: 6331c2e995c9164afca995617f3bc55199769942
            redirectUriTemplate: "http://localhost:8080/oauth2/callback/github"
            clientAuthenticationMethod: get
            scope:
              - user:email
              - read:user
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 360
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect


